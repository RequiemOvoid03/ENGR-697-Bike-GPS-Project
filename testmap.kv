#:import MapSource kivy_garden.mapview.MapSource
#:import dp kivy.metrics.dp
#:import MDBoxLayout kivymd.uix.boxlayout.MDBoxLayout


<KeyboardButton@Button>:
    size_hint: None, None
    size: dp(80), dp(80)
    font_size: dp(28)
    background_normal: ''
    background_color: 0.2, 0.6, 0.8, 1  # Modern blue color
    border: dp(10), dp(10), dp(10), dp(10)



<TestMapScreen>:
    name: 'testmap'
    map_view: map_view
    BoxLayout:
        orientation: 'vertical'

        MDBoxLayout:
            size_hint_y: None
            height: dp(40)
            padding: [dp(10), dp(10)]
            spacing: dp(10)
            pos_hint: {'top': 1}

            MDLabel:
                id: current_time
                text: "Loading..."
                font_style: "Caption"
                halign: "left"
                valign: "middle"
                size_hint_x: None
                width: dp(100)

#            MDLabel:
#                id: estimated_arrival_time
#                text: "Arrival Time: --:-- --"  # Placeholder text
#                font_style: "Caption"
#                halign: "right"
#                valign: "middle"
#                size_hint_x: None
#                width: dp(150)  # Adjust width as needed to fit the text

        MDRelativeLayout:
            MapView:
                id: map_view
                lat: 37.769278
                lon: -122.438580
                zoom: 12

            MDLabel:
                id: status_label
                text: "Waiting for GPS fix..."
                font_style: "Caption"
                halign: "center"
                size_hint_y: None
                height: dp(30)
                pos_hint: {'center_x': 0.5, 'top': 1}

            MDCard:
                id: direction_label
                size_hint: 0.9, None
                height: dp(50)
                orientation: "horizontal"
                padding: [dp(10), dp(10)]
                md_bg_color: 1, 1, 1, 1
                pos_hint: {'center_x': 0.5, 'top': 1}
                elevation: 2
                spacing: dp(10)

                MDLabel:
                    id: direction_text
                    text: ""
                    font_style: "H6"
                    halign: "left"
                    size_hint_x: None
                    width: dp(40)
                MDIcon:
                    id: direction_icon
                    icon: ""
                    size_hint_x: None
                    width: dp(30)
                    halign: "left"
                MDLabel:
                    id: direction_road
                    text: ""
                    font_style: "H6"
                    halign: "left"
                    valign: "middle"
                    size_hint_x: 1
            BoxLayout:
                id: dpad_layout
                orientation: 'vertical'
                size_hint: None, None
                size: dp(80), dp(80)
                pos_hint: {'center_x': 0.1, 'center_y': 0.2}
                opacity: 1 if not root.auto_center else 0
                disabled: root.auto_center

                Button:
                    id: btn_up
                    text: '\u25B2'  # Upward triangle
                    font_size: dp(24)
                    size_hint_y: None
                    height: dp(30)
                    on_press: root.start_panning('up')
                    on_release: root.stop_panning()

                BoxLayout:
                    orientation: 'horizontal'

                    Button:
                        id: btn_left
                        text: '\u25C0'  # Left-pointing triangle
                        font_size: dp(24)
                        size_hint_x: None
                        width: dp(30)
                        on_press: root.start_panning('left')
                        on_release: root.stop_panning()

                    Widget:
                        size_hint_x: None
                        width: dp(20)

                    Button:
                        id: btn_right
                        text: '\u25B6'  # Right-pointing triangle
                        font_size: dp(24)
                        size_hint_x: None
                        width: dp(30)
                        on_press: root.start_panning('right')
                        on_release: root.stop_panning()

                Button:
                    id: btn_down
                    text: '\u25BC'  # Downward triangle
                    font_size: dp(24)
                    size_hint_y: None
                    height: dp(30)
                    on_press: root.start_panning('down')
                    on_release: root.stop_panning()

            MDFloatingActionButton:
                icon: "menu"
                md_bg_color: "black"
                icon_color: "white"
                size_hint: None, None
                size: dp(56), dp(56)  # Standard FAB size
                pos_hint: {'x': 0.05, 'top': 0.80}
                on_release: root.open_menu(self)

            MDFloatingActionButton:
                icon: "magnify"
                md_bg_color: "black"
                icon_color: "white"
                size_hint: None, None
                size: dp(56), dp(56)  # Standard FAB size
                pos_hint: {'right': 0.95, 'top': 0.80}
                on_release: root.show_search_popup()  # Show the pop-up to enter destination

            MDFloatingActionButton:
                icon: "map-marker"
                md_bg_color: "black"
                icon_color: "white"
                size_hint: None, None
                size: dp(56), dp(56)  # Standard FAB size
                pos_hint: {'right': 0.95, 'top': 0.60}
                on_release: root.show_position()

            MDFloatingActionButton:
                icon: "home"
                md_bg_color: "black"
                icon_color: "white"
                size_hint: None, None
                size: dp(56), dp(56)  # Standard FAB size
                pos_hint: {'right': 0.95, 'top': 0.40}
                on_release: root.go_home()

            MDFloatingActionButton:
                icon: "compass"
                md_bg_color: "black"
                icon_color: "white"
                size_hint: None, None
                size: dp(56), dp(56)  # Standard FAB size
                pos_hint: {'right': 0.95, 'top': 0.20}
                on_release: root.go_to_compass()
            MDFloatingActionButton:
                id: auto_center_button
                icon: "crosshair-gps"
                md_bg_color: "black"
                icon_color: "white"
                size_hint: None, None
                size: dp(56), dp(56)
                pos_hint: {'x': 0.05, 'top': 0.40}
                on_release: root.toggle_auto_center(self)
        BoxLayout:
            orientation: "horizontal"
            size_hint_y: None
            height: dp(45)
            padding: [dp(5), dp(5), dp(5), dp(5)]
            spacing: dp(10)
            pos_hint: {'center_x': 0.5, 'bottom': 1}

            MDCard:
                size_hint: None, None
                size: dp(135), dp(36)
                orientation: "vertical"
                padding: dp(5)
                md_bg_color: 1, 1, 1, 1
                elevation: 2

                MDLabel:
                    text: "Duration"
                    font_style: "Caption"
                    halign: "center"
                    size_hint_y: None
                    height: self.texture_size[1]
                MDLabel:
                    id: duration_timer
                    text: "00:00:00"
                    font_style: "H5"
                    halign: "center"
                    bold: True

            MDCard:
                size_hint: None, None
                size: dp(135), dp(36)
                orientation: "vertical"
                padding: dp(5)
                md_bg_color: 1, 1, 1, 1
                elevation: 2

                MDLabel:
                    text: "SPEED"
                    font_style: "Caption"
                    halign: "center"
                    size_hint_y: None
                    height: self.texture_size[1]
                MDLabel:
                    id: speed_label
                    text: "0.0 km/h"
                    font_style: "H5"
                    halign: "center"
                    bold: True

            MDCard:
                size_hint: None, None
                size: dp(135), dp(36)
                orientation: "vertical"
                padding: dp(5)
                md_bg_color: 1, 1, 1, 1
                elevation: 2

                MDLabel:
                    text: "DISTANCE"
                    font_style: "Caption"
                    halign: "center"
                    size_hint_y: None
                    height: self.texture_size[1]
                MDLabel:
                    id: distance
                    text: "0 km"
                    font_style: "H5"
                    halign: "center"
                    bold: True

            MDCard:
                size_hint: None, None
                size: dp(135), dp(36)
                orientation: "vertical"
                padding: dp(5)
                md_bg_color: 1, 1, 1, 1
                elevation: 2

                MDLabel:
                    text: "ELEVATION"
                    font_style: "Caption"
                    halign: "center"
                    size_hint_y: None
                    height: self.texture_size[1]
                MDLabel:
                    text: "0 ft"
                    font_style: "H5"
                    halign: "center"
                    bold: True

            MDCard:
                size_hint: None, None
                size: dp(135), dp(36)
                orientation: "vertical"
                padding: dp(5)
                md_bg_color: 1, 1, 1, 1
                elevation: 2

                MDLabel:
                    text: "Arrival Time"
                    font_style: "Caption"
                    halign: "center"
                    size_hint_y: None
                    height: self.texture_size[1]
                MDLabel:
                    id: estimated_arrival_time
                    text: " --:-- --"  # Placeholder text
                    font_style: "H5"
                    halign: "center"
                    bold: True


#<DestinationPopup@Popup>:
#    title: "Search"
#    size_hint: 1.0, 1.0  # Slightly increased the size hint to provide more space
#    auto_dismiss: False

#    BoxLayout:
#        orientation: "vertical"
#        padding: dp(10)
#        spacing: dp(10)

#        BoxLayout:
#            orientation: "horizontal"
#            size_hint_y: None
#            height: dp(50)  # Adjusted the height of the search bar
#            padding: [dp(10), 0, dp(10), 0]
#            spacing: dp(10)
#            canvas.before:
#                Color:
#                    rgba: 0.1, 0.1, 0.1, 0.9  # Dark background with slight transparency
#                RoundedRectangle:
#                    pos: self.pos
#                    size: self.size
#                    radius: [dp(30), dp(30), dp(30), dp(30)]  # Ensures border_radius is a list

#            MDIconButton:
#                icon: "magnify"
#                theme_text_color: "Custom"
#                text_color: 1, 1, 1, 1  # White search icon

#            TextInput:
#                id: destination_input
#                hint_text: "Enter destination"
#                multiline: False
#                background_color: 0, 0, 0, 0  # Transparent background for input field
#                foreground_color: 1, 1, 1, 1  # White text color
#                cursor_color: 1, 1, 1, 1  # White cursor color
#                hint_text_color: 0.6, 0.6, 0.6, 1  # Light gray hint text color
#                font_size: '18sp'
#                padding: [dp(10), self.padding[1]]  # Replaced padding_x with padding
#                size_hint_x: 1
#                height: dp(10)  # Set the height to align with the icon

#            MDIconButton:
#                icon: "close"
#                theme_text_color: "Custom"
#                text_color: 1, 1, 1, 1  # White close icon
#                on_release:
#                    destination_input.text = ""  # Clear the text field
#                    root.dismiss()

#        BoxLayout:
#            id: keyboard_layout
#            size_hint_y: None
#            height: dp(450)  # Make sure the keyboard has enough space
#            orientation: 'vertical'
#            spacing: dp(10)
#            padding: dp(10)

#            GridLayout:
#                cols: 10
#                spacing: dp(5)  # Adjusted spacing for better alignment
#                size_hint_x: 1
#                size_hint_y: None
#                height: dp(70)
#                width: self.minimum_width

#                Button:
#                    text: '1'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: '2'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: '3'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: '4'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: '5'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: '6'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: '7'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: '8'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: '9'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: '0'
#                    on_release: destination_input.text += self.text

#            GridLayout:
#                cols: 10
#                spacing: dp(2)

#                Button:
#                    text: 'q'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'w'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'e'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'r'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 't'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'y'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'u'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'i'
#                    on_release: destination_input.text += self.text               Button:
#                    text: 'o'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'p'
#                    on_release: destination_input.text += self.text
#            GridLayout:
#                cols: 9
#                spacing: dp(2)

#                Button:
#                    text: 'a'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 's'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'd'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'f'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'g'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'h'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'j'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'k'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'l'
#                    on_release: destination_input.text += self.text

#            GridLayout:
#                cols: 7
#                spacing: dp(2)

#                Button:
#                    text: 'z'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'x'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'c'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'v'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'b'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'n'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'm'
#                    on_release: destination_input.text += self.text

#            GridLayout:
#                cols: 3
#                spacing: dp(2)

#                Button:
#                    text: ' '
#                    on_release: destination_input.text += self.text
#                    size_hint_x: 2  # Make space bar wider
#                Button:
#                    text: '.'
#                    on_release: destination_input.text += self.text
#                Button:
#                    text: 'DEL'
#                    on_release: destination_input.text = destination_input.text[:-1]  # Delete the last character

#        MDRaisedButton:
#            text: "Search"
#            size_hint_y: None
#            height: dp(40)
#            pos_hint: {'center_x': 0.5}
#            on_release: app.root.get_screen('testmap').search_destination(destination_input.text)

<SearchPopup>:
    title: ""
    size_hint: None, None
    size: dp(720), dp(720)
    auto_dismiss: False
    destination_text: ''
    BoxLayout:
        orientation: 'vertical'
        spacing: dp(8)
        padding: dp(8)
        # Top bar with close (X) button
        BoxLayout:
            size_hint_y: None
            height: dp(50)
            Button:
                text: "X"
                size_hint: None, None
                size: dp(40), dp(40)
                font_size: dp(18)
                background_normal: ''
                background_color: 1, 0, 0, 1  # Red close button
                on_release: root.dismiss()
        Label:
            id: destination_label
            text: root.destination_text
            size_hint_y: None
            height: dp(40)
            font_size: dp(22)
            halign: 'center'
            valign: 'middle'
            text_size: self.size
        GridLayout:
            cols: 5
            spacing: dp(8)
            size_hint: None, None
            pos_hint: {"center_x": 0.5}
            width: self.minimum_width
            height: self.minimum_height
            # First row
            KeyboardButton:
                text: 'Q'
                on_press: root.on_key_press('Q')
            KeyboardButton:
                text: 'W'
                on_press: root.on_key_press('W')
            KeyboardButton:
                text: 'E'
                on_press: root.on_key_press('E')
            KeyboardButton:
                text: 'R'
                on_press: root.on_key_press('R')
            KeyboardButton:
                text: 'T'
                on_press: root.on_key_press('T')
            # Second row
            KeyboardButton:
                text: 'Y'
                on_press: root.on_key_press('Y')
            KeyboardButton:
                text: 'U'
                on_press: root.on_key_press('U')
            KeyboardButton:
                text: 'I'
                on_press: root.on_key_press('I')
            KeyboardButton:
                text: 'O'
                on_press: root.on_key_press('O')
            KeyboardButton:
                text: 'P'
                on_press: root.on_key_press('P')
            # Third row
            KeyboardButton:
                text: 'A'
                on_press: root.on_key_press('A')
            KeyboardButton:
                text: 'S'
                on_press: root.on_key_press('S')
            KeyboardButton:
                text: 'D'
                on_press: root.on_key_press('D')
            KeyboardButton:
                text: 'F'
                on_press: root.on_key_press('F')
            KeyboardButton:
                text: 'G'
                on_press: root.on_key_press('G')
            # Fourth row
            KeyboardButton:
                text: 'H'
                on_press: root.on_key_press('H')
            KeyboardButton:
                text: 'J'
                on_press: root.on_key_press('J')
            KeyboardButton:
                text: 'K'
                on_press: root.on_key_press('K')
            KeyboardButton:
                text: 'L'
                on_press: root.on_key_press('L')
            KeyboardButton:
                text: 'Z'
                on_press: root.on_key_press('Z')
            # Fifth row
            KeyboardButton:
                text: 'X'
                on_press: root.on_key_press('X')
            KeyboardButton:
                text: 'C'
                on_press: root.on_key_press('C')
            KeyboardButton:
                text: 'V'
                on_press: root.on_key_press('V')
            KeyboardButton:
                text: 'B'
                on_press: root.on_key_press('B')
            KeyboardButton:
                text: 'N'
                on_press: root.on_key_press('N')
        BoxLayout:
            size_hint_y: None
            height: dp(50)  # Bottom row buttons smaller
            spacing: dp(8)
            padding: dp(8)
            Button:
                text: 'Space'
                font_size: dp(22)
                on_press: root.on_key_press(' ')
                background_normal: ''
                background_color: 0.2, 0.6, 0.8, 1
                size_hint_x: 2  # Make 'Space' wider
            Button:
                text: 'Delete'
                font_size: dp(22)
                on_press: root.on_delete()
                background_normal: ''
                background_color: 0.7, 0.7, 0.7, 1
                size_hint_x: 1
            Button:
                text: 'Go'
                font_size: dp(22)
                on_press: root.on_search()
                background_normal: ''
                background_color: 0.7, 0.7, 0.7, 1
                size_hint_x: 1
